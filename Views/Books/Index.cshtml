

@model PaginatedList<Scridon_Grigore_Lab2.Models.Book>

@{
    ViewData["Title"] = "Index";
    var titleSortParm = ViewData["TitleSortParm"] as string ?? "Title";
    var priceSortParm = ViewData["PriceSortParm"] as string ?? "Price";
    var currentFilter = ViewData["CurrentFilter"];
    var currentSort = ViewData["CurrentSort"];
}

<h1>Index</h1>

<p>
    <a asp-action="Create class="btn btn-primary""><i class="fa-solid fa-book">Add Book</i>Create New</a>
</p>

<!-- Consolidating the search form -->
<form asp-action="Index" method="get">
    <p>
        Find by title: <input type="text" name="SearchString" value="@currentFilter" />
        <input type="submit" value="Search" class="btn btn-default" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-currentFilter="@ViewData["currentFilter"]>Title</a>
            </th>
            <th>
               Author
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" asp-routecurrentFilter="@ViewData["CurrentFilter"]">Price</a>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Author)</td> @* Adjust based on how 'Author' is represented in your 'Book' model *@
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table> 

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

<!-- Pagination controls -->
<div>
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-sortOrder="@currentSort"
       asp-route-searchString="@currentFilter"
       class="@(Model.HasPreviousPage ? null : "disabled")">Previous</a>
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-sortOrder="@currentSort"
       asp-route-searchString="@currentFilter"
       class="@(Model.HasNextPage ? null : "disabled")">Next</a>
</div>


